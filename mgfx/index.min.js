(()=>{let f$=Object.hasOwnProperty,h$={},j$,k$=a$=>{let b$=h$[a$];return b$||(b$=h$[a$]={exports:{}},j$[a$](b$.exports,b$)),b$.exports},l$=a$=>{if(a$&&a$.__esModule)return a$;let b$={};for(let c$ in a$)f$.call(a$,c$)&&(b$[c$]=a$[c$]);return b$.default=a$,b$},p$=a$=>l$(k$(a$));j$={1(){function N(){var l={};(function(){function c(b){if(!b.getExtension("OES_texture_float"))return!1;var k=b.createFramebuffer(),o=b.createTexture();b.bindTexture(b.TEXTURE_2D,o),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,1,1,0,b.RGBA,b.UNSIGNED_BYTE,null),b.bindFramebuffer(b.FRAMEBUFFER,k),b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,o,0);var p=[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],F=b.createTexture();b.bindTexture(b.TEXTURE_2D,F),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.LINEAR),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.LINEAR),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,2,2,0,b.RGBA,b.FLOAT,new Float32Array(p));var w=b.createProgram(),B=b.createShader(b.VERTEX_SHADER),x=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(B,"      attribute vec2 vertex;      void main() {        gl_Position = vec4(vertex, 0.0, 1.0);      }    "),b.shaderSource(x,"      uniform sampler2D texture;      void main() {        gl_FragColor = texture2D(texture, vec2(0.5));      }    "),b.compileShader(B),b.compileShader(x),b.attachShader(w,B),b.attachShader(w,x),b.linkProgram(w);var G=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,G),b.bufferData(b.ARRAY_BUFFER,new Float32Array([0,0]),b.STREAM_DRAW),b.enableVertexAttribArray(0),b.vertexAttribPointer(0,2,b.FLOAT,!1,0,0);var I=new Uint8Array(4);return b.useProgram(w),b.viewport(0,0,1,1),b.bindTexture(b.TEXTURE_2D,F),b.drawArrays(b.POINTS,0,1),b.readPixels(0,0,1,1,b.RGBA,b.UNSIGNED_BYTE,I),I[0]===127||I[0]===128}function d(){}function f(b){return b.$OES_texture_float_linear$===void 0&&Object.defineProperty(b,"$OES_texture_float_linear$",{enumerable:!1,configurable:!1,writable:!1,value:new d()}),b.$OES_texture_float_linear$}function e(b){return b==="OES_texture_float_linear"?f(this):h.call(this,b)}function g(){var b=i.call(this);return b.indexOf("OES_texture_float_linear")===-1&&b.push("OES_texture_float_linear"),b}try{var j=document.createElement("canvas").getContext("experimental-webgl")}catch(b){}if(!j||j.getSupportedExtensions().indexOf("OES_texture_float_linear")!==-1)return;if(c(j)){var h=WebGLRenderingContext.prototype.getExtension,i=WebGLRenderingContext.prototype.getSupportedExtensions;WebGLRenderingContext.prototype.getExtension=e,WebGLRenderingContext.prototype.getSupportedExtensions=g}})();function m(c){return a.triangleBlur=a.triangleBlur||new r(null,"        uniform sampler2D texture;        uniform vec2 delta;        varying vec2 texCoord;        "+u+"        void main() {            vec4 color = vec4(0.0);            float total = 0.0;                        /* randomize the lookup values to hide the fixed number of samples */            float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);                        for (float t = -30.0; t <= 30.0; t++) {                float percent = (t + offset - 0.5) / 30.0;                float weight = 1.0 - abs(percent);                vec4 sample = texture2D(texture, texCoord + delta * percent);                                /* switch to pre-multiplied alpha to correctly blur transparent images */                sample.rgb *= sample.a;                                color += sample * weight;                total += weight;            }                        gl_FragColor = color / total;                        /* switch back from pre-multiplied alpha */            gl_FragColor.rgb /= gl_FragColor.a + 0.00001;        }    "),z.call(this,a.triangleBlur,{delta:[c/this.width,0]}),z.call(this,a.triangleBlur,{delta:[0,c/this.height]}),this}function q(c,d){return a.brightnessContrast=a.brightnessContrast||new r(null,"        uniform sampler2D texture;        uniform float brightness;        uniform float contrast;        varying vec2 texCoord;        void main() {            vec4 color = texture2D(texture, texCoord);            color.rgb += brightness;            if (contrast > 0.0) {                color.rgb = (color.rgb - 0.5) / (1.0 - contrast) + 0.5;            } else {                color.rgb = (color.rgb - 0.5) * (1.0 + contrast) + 0.5;            }            gl_FragColor = color;        }    "),z.call(this,a.brightnessContrast,{brightness:E(-1,c,1),contrast:E(-1,d,1)}),this}function n(c,d){return a.unsharpMask=a.unsharpMask||new r(null,"        uniform sampler2D blurredTexture;        uniform sampler2D originalTexture;        uniform float strength;        uniform float threshold;        varying vec2 texCoord;        void main() {            vec4 blurred = texture2D(blurredTexture, texCoord);            vec4 original = texture2D(originalTexture, texCoord);            gl_FragColor = mix(blurred, original, 1.0 + strength);        }    "),this._.extraTexture.ensureFormat(this._.texture),this._.texture.use(),this._.extraTexture.drawTo(function(){r.getDefaultShader().drawRect()}),this._.extraTexture.use(1),this.triangleBlur(c),a.unsharpMask.textures({originalTexture:1}),z.call(this,a.unsharpMask,{strength:d}),this._.extraTexture.unuse(1),this}function t(c,d){return a.hueSaturation=a.hueSaturation||new r(null,"        uniform sampler2D texture;        uniform float hue;        uniform float saturation;        varying vec2 texCoord;        void main() {            vec4 color = texture2D(texture, texCoord);                        /* hue adjustment, wolfram alpha: RotationTransform[angle, {1, 1, 1}][{x, y, z}] */            float angle = hue * 3.14159265;            float s = sin(angle), c = cos(angle);            vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;            float len = length(color.rgb);            color.rgb = vec3(                dot(color.rgb, weights.xyz),                dot(color.rgb, weights.zxy),                dot(color.rgb, weights.yzx)            );                        /* saturation adjustment */            float average = (color.r + color.g + color.b) / 3.0;            if (saturation > 0.0) {                color.rgb += (average - color.rgb) * (1.0 - 1.0 / (1.001 - saturation));            } else {                color.rgb += (average - color.rgb) * (-saturation);            }                        gl_FragColor = color;        }    "),z.call(this,a.hueSaturation,{hue:E(-1,c,1),saturation:E(-1,d,1)}),this}function C(c,d){return new r(null,c+"    uniform sampler2D texture;    uniform vec2 texSize;    varying vec2 texCoord;    void main() {        vec2 coord = texCoord * texSize;        "+d+"        gl_FragColor = texture2D(texture, coord / texSize);        vec2 clampedCoord = clamp(coord, vec2(0.0), texSize);        if (coord != clampedCoord) {            /* fade to transparent if we are outside the image */            gl_FragColor.a *= max(0.0, 1.0 - length(coord - clampedCoord));        }    }")}var u="    float random(vec3 scale, float seed) {        /* use the fragment position for a different seed per-pixel */        return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);    }";function v(c){for(var d=new D(c),f=[],e=0;e<256;e++)f.push(E(0,Math.floor(d.interpolate(e/255)*256),255));return f}function H(c,d,f){c=v(c),arguments.length==1?d=f=c:(d=v(d),f=v(f));for(var e=[],g=0;g<256;g++)e.splice(e.length,0,c[g],d[g],f[g],255);return this._.extraTexture.initFromBytes(256,1,e),this._.extraTexture.use(1),a.curves=a.curves||new r(null,"        uniform sampler2D texture;        uniform sampler2D map;        varying vec2 texCoord;        void main() {            vec4 color = texture2D(texture, texCoord);            color.r = texture2D(map, vec2(color.r)).r;            color.g = texture2D(map, vec2(color.g)).g;            color.b = texture2D(map, vec2(color.b)).b;            gl_FragColor = color;        }    "),a.curves.textures({map:1}),z.call(this,a.curves,{}),this}function D(c){var d=c.length;this.xa=[],this.ya=[],this.u=[],this.y2=[],c.sort(function(i,b){return i[0]-b[0]});for(var f=0;f<d;f++)this.xa.push(c[f][0]),this.ya.push(c[f][1]);this.u[0]=0,this.y2[0]=0;for(var f=1;f<d-1;++f){var e=this.xa[f+1]-this.xa[f-1],g=(this.xa[f]-this.xa[f-1])/e,j=g*this.y2[f-1]+2;this.y2[f]=(g-1)/j;var h=(this.ya[f+1]-this.ya[f])/(this.xa[f+1]-this.xa[f])-(this.ya[f]-this.ya[f-1])/(this.xa[f]-this.xa[f-1]);this.u[f]=(6*h/e-g*this.u[f-1])/j}this.y2[d-1]=0;for(var f=d-2;f>=0;--f)this.y2[f]=this.y2[f]*this.y2[f+1]+this.u[f]}D.prototype.interpolate=function(c){for(var d=this.ya.length,f=0,e=d-1;e-f>1;){var g=e+f>>1;this.xa[g]>c?e=g:f=g}var j=this.xa[e]-this.xa[f],h=(this.xa[e]-c)/j,i=(c-this.xa[f])/j;return h*this.ya[f]+i*this.ya[e]+((h*h*h-h)*this.y2[f]+(i*i*i-i)*this.y2[e])*(j*j)/6};function Q(c,d,f,e,g,j,h,i){var b=f-g,k=e-j,o=h-g,p=i-j,F=c-f+g-h,w=d-e+j-i,B=b*p-o*k,x=(F*p-o*w)/B,G=(b*w-F*k)/B;return[f-c+x*f,e-d+x*e,x,h-c+G*h,i-d+G*i,G,c,d,1]}function J(c){var d=c[0],f=c[1],e=c[2],g=c[3],j=c[4],h=c[5],i=c[6],b=c[7],k=c[8],o=d*j*k-d*h*b-f*g*k+f*h*i+e*g*b-e*j*i;return[(j*k-h*b)/o,(e*b-f*k)/o,(f*h-e*j)/o,(h*i-g*k)/o,(d*k-e*i)/o,(e*g-d*h)/o,(g*b-j*i)/o,(f*i-d*b)/o,(d*j-f*g)/o]}function za(c,d){return[c[0]*d[0]+c[1]*d[3]+c[2]*d[6],c[0]*d[1]+c[1]*d[4]+c[2]*d[7],c[0]*d[2]+c[1]*d[5]+c[2]*d[8],c[3]*d[0]+c[4]*d[3]+c[5]*d[6],c[3]*d[1]+c[4]*d[4]+c[5]*d[7],c[3]*d[2]+c[4]*d[5]+c[5]*d[8],c[6]*d[0]+c[7]*d[3]+c[8]*d[6],c[6]*d[1]+c[7]*d[4]+c[8]*d[7],c[6]*d[2]+c[7]*d[5]+c[8]*d[8]]}var r=function(){function c(h){return Object.prototype.toString.call(h)=="[object Array]"}function d(h){return Object.prototype.toString.call(h)=="[object Number]"}function f(h,i){var b=a.createShader(h);a.shaderSource(b,i),a.compileShader(b);if(!a.getShaderParameter(b,a.COMPILE_STATUS))throw"compile error: "+a.getShaderInfoLog(b);return b}var e="    attribute vec2 vertex;    attribute vec2 _texCoord;    varying vec2 texCoord;    void main() {        texCoord = _texCoord;        gl_Position = vec4(vertex * 2.0 - 1.0, 0.0, 1.0);    }",g="    uniform sampler2D texture;    varying vec2 texCoord;    void main() {        gl_FragColor = texture2D(texture, texCoord);    }";function j(h,i){this.vertexAttribute=null,this.texCoordAttribute=null,this.program=a.createProgram(),h=h||e,i=i||g,i="precision highp float;"+i,a.attachShader(this.program,f(a.VERTEX_SHADER,h)),a.attachShader(this.program,f(a.FRAGMENT_SHADER,i)),a.linkProgram(this.program);if(!a.getProgramParameter(this.program,a.LINK_STATUS))throw"link error: "+a.getProgramInfoLog(this.program)}return j.prototype.destroy=function(){a.deleteProgram(this.program),this.program=null},j.prototype.uniforms=function(h){a.useProgram(this.program);for(var i in h){if(!h.hasOwnProperty(i))continue;var b=a.getUniformLocation(this.program,i);if(b===null)continue;var k=h[i];if(c(k))switch(k.length){case 1:a.uniform1fv(b,new Float32Array(k));break;case 2:a.uniform2fv(b,new Float32Array(k));break;case 3:a.uniform3fv(b,new Float32Array(k));break;case 4:a.uniform4fv(b,new Float32Array(k));break;case 9:a.uniformMatrix3fv(b,!1,new Float32Array(k));break;case 16:a.uniformMatrix4fv(b,!1,new Float32Array(k));break;default:throw`dont't know how to load uniform "`+i+'" of length '+k.length}else if(d(k))a.uniform1f(b,k);else throw'attempted to set uniform "'+i+'" to invalid value '+(k||"undefined").toString()}return this},j.prototype.textures=function(h){a.useProgram(this.program);for(var i in h){if(!h.hasOwnProperty(i))continue;a.uniform1i(a.getUniformLocation(this.program,i),h[i])}return this},j.prototype.drawRect=function(h,i,b,k){var o,p=a.getParameter(a.VIEWPORT);i=i!==o?(i-p[1])/p[3]:0,h=h!==o?(h-p[0])/p[2]:0,b=b!==o?(b-p[0])/p[2]:1,k=k!==o?(k-p[1])/p[3]:1,a.vertexBuffer==null&&(a.vertexBuffer=a.createBuffer()),a.bindBuffer(a.ARRAY_BUFFER,a.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,new Float32Array([h,i,h,k,b,i,b,k]),a.STATIC_DRAW),a.texCoordBuffer==null&&(a.texCoordBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,a.texCoordBuffer),a.bufferData(a.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,1]),a.STATIC_DRAW)),this.vertexAttribute==null&&(this.vertexAttribute=a.getAttribLocation(this.program,"vertex"),a.enableVertexAttribArray(this.vertexAttribute)),this.texCoordAttribute==null&&(this.texCoordAttribute=a.getAttribLocation(this.program,"_texCoord"),a.enableVertexAttribArray(this.texCoordAttribute)),a.useProgram(this.program),a.bindBuffer(a.ARRAY_BUFFER,a.vertexBuffer),a.vertexAttribPointer(this.vertexAttribute,2,a.FLOAT,!1,0,0),a.bindBuffer(a.ARRAY_BUFFER,a.texCoordBuffer),a.vertexAttribPointer(this.texCoordAttribute,2,a.FLOAT,!1,0,0),a.drawArrays(a.TRIANGLE_STRIP,0,4)},j.getDefaultShader=function(){return a.defaultShader=a.defaultShader||new j(),a.defaultShader},j}(),a;function E(c,d,f){return Math.max(c,Math.min(d,f))}function K(c){return{_:c,loadContentsOf:function(d){a=this._.gl,this._.loadContentsOf(d)},destroy:function(){a=this._.gl,this._.destroy()}}}function R(c){return K(A.fromElement(c))}function S(c,d){var f=a.UNSIGNED_BYTE;if(a.getExtension("OES_texture_float")&&a.getExtension("OES_texture_float_linear")){var e=new A(100,100,a.RGBA,a.FLOAT);try{e.drawTo(function(){f=a.FLOAT})}catch(g){}e.destroy()}this._.texture&&this._.texture.destroy(),this._.spareTexture&&this._.spareTexture.destroy(),this.width=c,this.height=d,this._.texture=new A(c,d,a.RGBA,f),this._.spareTexture=new A(c,d,a.RGBA,f),this._.extraTexture=this._.extraTexture||new A(0,0,a.RGBA,f),this._.flippedShader=this._.flippedShader||new r(null,"        uniform sampler2D texture;        varying vec2 texCoord;        void main() {            gl_FragColor = texture2D(texture, vec2(texCoord.x, texCoord.y));        }    "),this._.isInitialized=!0}function T(c,d,f){return(!this._.isInitialized||c._.width!=this.width||c._.height!=this.height)&&S.call(this,d?d:c._.width,f?f:c._.height),c._.use(),this._.texture.drawTo(function(){r.getDefaultShader().drawRect()}),this}function U(){return this._.texture.use(),this._.flippedShader.drawRect(),this}function z(c,d,f,e){(f||this._.texture).use(),this._.spareTexture.drawTo(function(){c.uniforms(d).drawRect()}),this._.spareTexture.swapWith(e||this._.texture)}function V(c){return c.parentNode.insertBefore(this,c),c.parentNode.removeChild(c),this}function W(){var c=new A(this._.texture.width,this._.texture.height,a.RGBA,a.UNSIGNED_BYTE);return this._.texture.use(),c.drawTo(function(){r.getDefaultShader().drawRect()}),K(c)}function X(){var c=this._.texture.width,d=this._.texture.height,f=new Uint8Array(c*d*4);return this._.texture.drawTo(function(){a.readPixels(0,0,c,d,a.RGBA,a.UNSIGNED_BYTE,f)}),f}function s(c){return function(){return a=this._.gl,c.apply(this,arguments)}}l.canvas=function(){var c=document.createElement("canvas");try{a=c.getContext("experimental-webgl",{premultipliedAlpha:!1})}catch(d){a=null}if(!a)throw"This browser does not support WebGL";return c._={gl:a,isInitialized:!1,texture:null,spareTexture:null,flippedShader:null},c.texture=s(R),c.draw=s(T),c.update=s(U),c.replace=s(V),c.contents=s(W),c.getPixelArray=s(X),c.brightnessContrast=s(q),c.hueSaturation=s(t),c.triangleBlur=s(m),c.unsharpMask=s(n),c.curves=s(H),c},l.splineInterpolate=v;var A=function(){c.fromElement=function(e){var g=new c(0,0,a.RGBA,a.UNSIGNED_BYTE);return g.loadContentsOf(e),g};function c(e,g,j,h){this.gl=a,this.id=a.createTexture(),this.width=e,this.height=g,this.format=j,this.type=h,a.bindTexture(a.TEXTURE_2D,this.id),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),e&&g&&a.texImage2D(a.TEXTURE_2D,0,this.format,e,g,0,this.format,this.type,null)}c.prototype.loadContentsOf=function(e){this.width=e.width||e.videoWidth,this.height=e.height||e.videoHeight,a.bindTexture(a.TEXTURE_2D,this.id),a.texImage2D(a.TEXTURE_2D,0,this.format,this.format,this.type,e)},c.prototype.initFromBytes=function(e,g,j){this.width=e,this.height=g,this.format=a.RGBA,this.type=a.UNSIGNED_BYTE,a.bindTexture(a.TEXTURE_2D,this.id),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,e,g,0,a.RGBA,this.type,new Uint8Array(j))},c.prototype.destroy=function(){a.deleteTexture(this.id),this.id=null},c.prototype.use=function(e){a.activeTexture(a.TEXTURE0+(e||0)),a.bindTexture(a.TEXTURE_2D,this.id)},c.prototype.unuse=function(e){a.activeTexture(a.TEXTURE0+(e||0)),a.bindTexture(a.TEXTURE_2D,null)},c.prototype.ensureFormat=function(e,g,j,h){if(arguments.length==1){var i=arguments[0];e=i.width,g=i.height,j=i.format,h=i.type}(e!=this.width||g!=this.height||j!=this.format||h!=this.type)&&(this.width=e,this.height=g,this.format=j,this.type=h,a.bindTexture(a.TEXTURE_2D,this.id),a.texImage2D(a.TEXTURE_2D,0,this.format,e,g,0,this.format,this.type,null))},c.prototype.drawTo=function(e){a.framebuffer=a.framebuffer||a.createFramebuffer(),a.bindFramebuffer(a.FRAMEBUFFER,a.framebuffer),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.id,0);if(a.checkFramebufferStatus(a.FRAMEBUFFER)!==a.FRAMEBUFFER_COMPLETE)throw new Error("incomplete framebuffer");a.viewport(0,0,this.width,this.height),e(),a.bindFramebuffer(a.FRAMEBUFFER,null)};var d=null;function f(e){d==null&&(d=document.createElement("canvas")),d.width=e.width,d.height=e.height;var g=d.getContext("2d");return g.clearRect(0,0,d.width,d.height),g}return c.prototype.fillUsingCanvas=function(e){return e(f(this)),this.format=a.RGBA,this.type=a.UNSIGNED_BYTE,a.bindTexture(a.TEXTURE_2D,this.id),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,d),this},c.prototype.toImage=function(e){this.use(),r.getDefaultShader().drawRect();var g=this.width*this.height*4,j=new Uint8Array(g),h=f(this),i=h.createImageData(this.width,this.height);a.readPixels(0,0,this.width,this.height,a.RGBA,a.UNSIGNED_BYTE,j);for(var b=0;b<g;b++)i.data[b]=j[b];h.putImageData(i,0,0),e.src=d.toDataURL()},c.prototype.swapWith=function(e){var g;g=e.id,e.id=this.id,this.id=g,g=e.width,e.width=this.width,this.width=g,g=e.height,e.height=this.height,this.height=g,g=e.format,e.format=this.format,this.format=g},c}();return l}let y={elem:[],index:0};function L(l){y.elem=l,document.querySelector("img").addEventListener("click",{handleEvent:function(m){y.elem[y.index%y.elem.length].style.top=`${m.pageY}px`,y.index+=1}},!1)}function $(){return y}class O{constructor(){}load(l,m){return this.canvas=N().canvas(),this.texture=this.canvas.texture(l),this.img=m,this}process(l){const{slider:m,fullHD:q=!1}=l;let n=.6;q&&(n=2),this.canvas.draw(this.texture,this.img.width*n,this.img.height*n).hueSaturation(0,-1).brightnessContrast(m||.1,.5).unsharpMask(20,1).update(),this.img.src=this.canvas.toDataURL("image/jpg"),document.querySelector("#zoom_img").src=this.img.src}save(){}}let P={url:"http://sisko.local/poze",hr:[],hrpos:0};function ma(){console.log("* TBD.js v1")}async function na(l){const m=new FormData();m.append("file",l);const q={method:"POST",headers:{"Content-type":"image/jpg"},mode:"no-cors",body:m};try{let n=await fetch(P.url,q),t=await n.text();console.log("* uploaded:",l.name)}catch(n){console.error("* error ",n)}}async function oa(l,m){let q=await fetch(l.src),n=await q.blob(),t=await new File([n],m,n);return t}function pa(){return new Date().toISOString().replace(/[\.:TZ-]/g,"")}class M{constructor(l){const{open:m,slider:q,save:n,preview:t}=l;this.debounceTimer=null,this.screenshot=new O(),this.preview=t,this.bufferImage=new Image(),this.bufferImage.addEventListener("load",this,!1),q.addEventListener("input",this,!1);const C=document.querySelector("#getFile");C.addEventListener("change",this,!1),m.addEventListener("click",u=>C.click(),!1),n.addEventListener("click",this,!1),L([document.querySelector("#m1"),document.querySelector("#m2")])}handleEvent(l){this["on"+l.type](l)}onclick(l){console.log("* onclick");const m=this.preview;let q=2,n=document.querySelector("#p"),t=[m1,m2],C=t.map(J=>J.getBoundingClientRect().top+m.offsetTop).sort(),[u,v]=C;n.width=m.width,n.height=v-u,n.style.top=`${u-m.offsetTop}px`,n.style.left=`${m.offsetLeft}px`;let H=n.getContext("2d"),D=m.width,Q=m.height;H.drawImage(m,0,u,D*q,(v-u)*q,0,0,D,v-u)}onload(l){document.querySelector("#zoom").innerHTML="<img id=zoom_img>",this.screenshot.load(this.bufferImage,this.preview),this.oninput({target:{valueAsNumber:.1}})}oninput(l){if(!this.preview.src)return;clearTimeout(this.debounceTimer),this.screenshot.process({slider:l.target.valueAsNumber}),this.debounceTimer=setTimeout(()=>this.screenshot.process({slider:l.target.valueAsNumber,fullHD:!0}),500)}onchange(l){const m=URL.createObjectURL(l.target.files[0]);this.bufferImage.src=m,this.preview.src=m}}window.UI=M}};return k$(1)})();
